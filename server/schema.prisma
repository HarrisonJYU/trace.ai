// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator python {
  provider = "prisma-client-py"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     Int                     @id @unique @default(autoincrement())
  name                   String
  email                  String                  @unique
  linearId               String?                 @unique
  slackId                String?                 @unique
  rawMessages            RawMessage[]            @relation("UserRawMessages")
  processedConversations ProcessedConversation[] @relation("UserProcessedConversations")
  tickets                Ticket[]                @relation("UserTickets")
  projects               Project[]               @relation("ProjectUsers")
}

model Project {
  id           Int      @id @unique @default(autoincrement())
  name         String
  tickets      Ticket[] @relation("ProjectTickets")
  stakeholders User[]   @relation("ProjectUsers")
  messages     ProcessedConversation[] @relation("ProjectMessages")
}

model Ticket {
  id          Int       @id @unique @default(autoincrement())
  linearId    String    @unique
  title       String
  projectId   Int?
  project     Project?  @relation("ProjectTickets", fields: [projectId], references: [id])
  description String?
  createdAt   DateTime?
  user        User?     @relation("UserTickets", fields: [userId], references: [id])
  userId      Int?
}

model RawMessage {
  id                     Int                     @id @unique @default(autoincrement())
  text                   String
  time                   DateTime
  processedMsg           ProcessedMessage?       @relation("RawMessageProcessedMessage")
  user                   User                    @relation("UserRawMessages", fields: [userId], references: [id])
  userId                 Int
  processedConversations ProcessedConversation[] @relation("ProcessedConversationRawMessages")
}

model ProcessedConversation {
  id        Int          @id @unique @default(autoincrement())
  summary   String
  startTime DateTime
  endTime   DateTime
  rawMsgs   RawMessage[] @relation("ProcessedConversationRawMessages")
  user      User         @relation("UserProcessedConversations", fields: [userId], references: [id])
  userId    Int
  projectId Int?
  project   Project?     @relation("ProjectMessages", fields: [projectId], references: [id])
}

model ProcessedMessage {
  id       Int         @id @unique @default(autoincrement())
  // Add your processed message fields here
  rawMsg   RawMessage? @relation("RawMessageProcessedMessage", fields: [rawMsgId], references: [id])
  rawMsgId Int?        @unique
}
